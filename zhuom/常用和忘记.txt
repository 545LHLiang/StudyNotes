-------------功能实现
//全选功能实现：
//1.获取全选按钮 使用 change()方法
//2.获取小的复选框按钮 并使用 prop（）方法 获取按钮checked状态
//3.使其小的复选框按钮的 checked属性值修改为 全选按钮的状态 $(this).prop("checked")this指向change前的jQuery对象
//4.如果小复选框全选了   全选按钮也点亮
//     如果小复选框选中的个数 $(".j-checkbox:checked").length
//     等于  复选框总个数$(".j-checkbox").length  则全选按钮点亮 负责 不亮


images 样式类图片  upload 产品图片   base.css初始化   common.css  共同样式
png 转ico  比特虫 favicon.ico

.icon 图标 放在根目录
  <!-- link:favicon : 浏览器标题栏图标 -->
     <link rel="shortcut icon" href="favicon.ico">

seo(title  desc  kw) 

E:first-child/last-child/nth-child(n)/nth-last-child(){}  n为：0、1、2/  偶数2n even   /奇数 2n+1/-1 odd/  找到前五个 -n+5/后五个n+5

头部导航栏: 可以竖杠 看成一个li 设置同样的样式  设置外边距
logo优化： h1>a(文字：网站名)设置背景图  把文字大小设置0  title（文字：网站名）
header： search搜索模块   input：search（把默认边框去了）

e.pageX/Y鼠标位置  e.target用于事件委托  
window.open(网址) 打开新网址
console.dir()对象的所有属性和属性值

    //轮播图 图片循环 无缝衔接  
            if (i === imga.length - 1) {
                i = -1
            }

 keydown   keyup键盘发布
 // 自动触发点击按钮        send.click()
-----------------------------------------动画转换
transform：移动：translate(x,y) 旋转：rotate(0deg)  缩放：scale(x,y)
@keyframes 定义动画{0%/from{}100%/to{}}
animation :动画名称--持续时间--运动曲线--何时开始--播放次数--是否反方向--动画起始或者结束的状态;
animation: name--duration-- timing-function(ease/linear/steps) --delay-- iteration-count(infinite)-- direction(normal/reverse向后/alternate先向前再向后)--fill-mode(forwards 最后一帧 backwards第一帧 );
3D位移translate3d(x,y,z);
3D旋转rotate3d(x（1）,y（0）,z（0）,deg（45deg）)rotate3d(1,1,0,45deg)沿着对角线旋转
透视：perspective
3D呈现transfrom-style flat 不开启，preserve-3d 开启
隐藏被旋转的 div 元素的背面：	backface-visibility: hidden;
---------------------------------频率较多
list-style:none;  去掉项目符号
opacity:0.5;  透明度

取消input边框
input {
  border: none;
  outline: none;
  color: #333;
}
内减模式
 box-sizing: border-box;
强制文字显示一行   white-space: nowrap;

过度：transition：属性  时间s；
   书写  /* transition: width 1s, background-color 2s; */
            /* 如果变化的属性多, 直接写all,表示所有 */
            transition: all 1s;
text-indent ：2rem缩进
text-decoration: none;  取消下划线
display: inline-block; 转为行内块
background-image: url(images/sprites.png); 背景图
background-position: -160px -70px;定位背景图
background-size: contain;图片等比例显示
隐藏被旋转的 div 元素的背面：	backface-visibility: hidden;

事件名称   click 单击  dblclick双击  mouseenter 鼠标经过   mouseleave鼠标离开       foucus/blur 获得失去焦点    scroll滚动事件  resize窗口尺寸事件
注意：获取元素 类名要加点   追加类 类名不加点 
继承 < 通配符选择器 < 标签选择器 < 类选择器 < id选择器 < 行内样式 < !important
➢ 使用子绝父相水平垂直居中的操作是什么？
1. 子绝父相 left：50%； top：50%；
2. transform：translate（-50%，-50%）；//位移自己宽度高度的一半
z-index：数字；修改定位元素层级
垂直对齐：vertical-align ：baseline 默认 基线对齐 top 顶部 middle 中部 bottom底部
光标类型 cursor  属性值：default 箭头 pointer小手 text 工字型 move 十字光标
边框合并border-collapse：collapse；

" target="目标窗口的弹出方式"  _self
为默认值，  _blank 为在新窗口中打开方式。

seo优化 title  desc  key
1title：网页标题标签  网站名-网站介绍（30字内）
2. description：网页描述标签     
3. keywords：网页关键词标签

.icon 图标 放在根目录
  <!-- link:favicon : 浏览器标题栏图标 -->
     <link rel="shortcut icon" href="favicon.ico">

  /* 双伪元素清除法 */
        
        .clearfix:before,
        .clearfix:after {
            content: " ";
            display: table;
        }
        
        .clearfix:after {
            clear: both;
        }
        
        .clearfix {
            *zoom: 1;
        }
    // 检测 userAgent（浏览器信息） 移动和pc端切换
    !(function () {
      const userAgent = navigator.userAgent
      // 验证是否为Android或iPhone
      const android = userAgent.match(/(Android);?[\s\/]+([\d.]+)?/)
      const iphone = userAgent.match(/(iPhone\sOS)\s([\d_]+)/)
      // 如果是Android或iPhone，则跳转至移动站点
      if (android || iphone) {
        location.href = 'http://m.itcast.cn'
      }
    })()

//随机函数
 function getRandom(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min
      }
本地时间：new Date().toLocaleString()

1. 通过时间戳得到是毫秒，需要转换为秒在计算
     毫秒数 /1000=秒数
2. 转换公式：
 d = parseInt(总秒数/ 60/60 /24); // 计算天数
 h = parseInt(总秒数/ 60/60 %24) // 计算小时
 h = h < 10 ? '0' + h : h
 m = parseInt(总秒数 /60 %60 ); // 计算分数
  m = m < 10 ? '0' + m : m
 s = parseInt(总秒数%60); // 计算当前秒数
    s = s < 10 ? '0' + s : s

使用字符串.trim()去掉首尾空格
元素隐藏 → display：none
元素显示 → display：block
-----------------html
位置：top上 middle 中 下 bottom left 左 right 右
符号：空格& nbsp; 小于号& lt; 大于号& gt; 版权& copy; 上标&sup ; 下标&sub ; 度& deg;
多媒体：src：地址 controls：控制播放控件 autoplay：自动播放(部分浏览器不支持)视频(谷歌需要配合muted实现静音播放） 
                loop：循环播放  poster 显示图片   source自己选择
表格：• rowspan：跨行合并→垂直方向合并  • colspan：跨列合并→水平方向合并 
cellspacing 单元格与单元格边框的边距  cellpadding 单元格内容与单元格边框的边距
action服务器地址 method发送表单数据时使用的网络请求方法：get/post name 用来区分多个表单
text:文本框;password：密码; radio：单选框; checkbox：多选框; file:文件;submit:提交按钮;reset:重置按钮 button：普通按钮
type=email 邮箱 url 地址 date 日期 time 时间 month 月 week 周 number 数字 tel手机号 search搜索框
color颜色 autofocus 自动获取焦点 autocomplete 显示之前搜索的值 默认off /打开on
placeholder 提示用户输入内容   checkbox：默认选中    multiple：上传多个文件  maxlength：设置文本输入框最多能输多少字符
select 下拉菜单option标签：下拉菜单的每一项  textarea多行文本 cols：规定了文本域内可见宽度   rows：规定了文本域内可见行数
readonly="readonly"：设置文本输入框为只读（不能编辑） required 必须填写 pattern 定义规则
label标签  包裹内容 添加id属性 for属性设置对应的id属性
                 直接用lable标签把内容和表单标签包裹起来  把for 属性删除即可
---------------CSS
字体：font : style weight size family; 文本缩进：text-indent  文本修饰：text-decoration none 无线
背景固定：background-attachment：scroll 随页面滚动 fixed 固定
背景平铺：：background-repeat（bgr）：repeat 默认水平和垂直都平铺 no-repeat 不平铺 repeat-x/y 水平/垂直平铺
背景位置：background-position（bgp）：left center right top center bottom 数字+px(x轴 y轴)
设置边框图片：`border-image-source: url(images/1.jpg);`
图片边框偏移：`border-image-slice: 60;`
盒子阴影   box-shadow: h-shadow v-shadow blur spread color inset;    文字阴影  text-shadow: h-shadow v-shadow blur color
                 h/v必需 水平/垂直 b 模糊度 s尺寸 c颜色 i内部阴影 outset 外部
position：relative/absolute/fixed    子绝父相
2D移动：translate transform:translate(x,y) transform:translateX/Y(n)
旋转：rotate transform:rotate(0deg)
缩放：scale   transform:scale(x,y) 两个参数：宽和高放大;一个参数：第二个参数和第一个参数一样;0.5是缩小.
以改变中心角 transform-origin：方位词 方位词
3D位移：translate3d(x,y,z);可以分开写，同2d转换
3D旋转：rotate3d(x（1）,y（0）,z（0）,deg（45deg）)deg为自定义轴旋转，可以分开写，同2d转换
rotate3d(1,1,0,45deg)沿着对角线旋转
透视：perspective  
3D呈现   transfrom-style flat 不开启，preserve-3d 开启
动画
animation :动画名称--持续时间--运动曲线--何时开始--播放次数--是否反方向--动画起始或者结束的状态;
animation: name--duration（数字+s）-- timing-function(linear匀速 ease慢到快 steps步长) --delay（数字
+s）-- iteration-count（ iteration重复的 conut次数 (数字) infinite无限）-- direction（*normal（向前）默
认值 reverse （向后） alternate 先向前 后向后alternate-reverse 先向后后向前）--fill-mode（none 无
forwards 最后 backwards 最开始 both都保存）;
常写： animation: name 1.4s linear infinite
简写前两个必须写，属性里面不包含animation-play-state
暂停动画: animation-play-state: puased;经常和鼠标经过等其他配合使用
想要动画走回来，而不是直接跳回来: animation-direction : alternate
盒子动画结束后，停在结束位置: animation-fill-mode : forwards

--------------js 
输入： prompt()
输出： alert() 输出的内容为弹框
document.write() 页面内容输出
console.log() 控制台语法 程序员调试使用
数组长度 a.length
查 数组[下标]
增 arr.push(新增的内容) arr.unshift(新增的内容)
改 数组[下标] = 新值
删 arr.pop() arr.shift() arr.splice(操作的下标,删除的个数)
数组.push() 方法将一个或多个元素添加到数组的末尾，并返回该数组的新长度 (重点)
数组. pop() 方法从数组中删除最后一个元素，并返回该元素的值
数组. shift() 方法从数组中删除第一个元素，并返回该元素的值
数组. splice(起始位置，删除几个元素) 方法 删除指定元素


三大家族	scroll  家族  常用属性scrollTop/left          滚动距离（置顶 跳到某高度等）
	offset  家族   常用属性 offsetTop/left       （只读不能修改值   到达父元素的位置是 显示某个样式） 
	client 家族    常用属性  clientWidth/Height   
            前两个使用 scroll滚动事件  client 使用  resize事件
                document.documentElement （获取html元素）

e.target 真正触发事件的元素

 // 自动触发点击按钮        send.click()
取当前时间let date = new Date()
获取指定时间let date = new Date(‘1949-10-01’)
三种方式获取时间戳
	 	1. 使用 getTime() 方法  let date = new Date() console.log(date.getTime())
		2. 简写 +new Date()   console.log(+new Date())
 		3. 使用 Date().now()  console.log(Date().now())
			但是只能得到当前的时间戳， 而前面两种可以返回指定时间的时间戳
 









 
 


